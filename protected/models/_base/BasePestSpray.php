<?php

/**
 * This is the model base class for the table "{{pest_spray}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PestSpray".
 *
 * Columns in table "{{pest_spray}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property integer $number
 * @property integer $grower_id
 * @property integer $dd
 * @property integer $every
 * @property integer $lowpop_dd
 * @property integer $lowpop_every
 * @property string $creator_id
 * @property integer $ordering
 * @property string $created_at
 * @property string $updated_at
 * @property integer $status
 * @property integer $is_deleted
 * @property string $params
 *
 */
abstract class BasePestSpray extends SimbActiveRecord{
    public static function model($className=__CLASS__)
    {
		return parent::model($className);
	}

	public function tableName()
    {
		return '{{pest_spray}}';
	}

	public static function representingColumn()
    {
		return 'created_at';
	}

	public function rules()
    {
		return array(
			array('id, number, grower_id, dd, every', 'required'),
			array('number, grower_id, dd, every, lowpop_dd, lowpop_every, ordering, status, is_deleted', 'numerical', 'integerOnly'=>true),
			array('id', 'length', 'max'=>10),
			array('creator_id', 'length', 'max'=>20),
			array('created_at, updated_at, params', 'safe'),
			array('lowpop_dd, lowpop_every, creator_id, ordering, created_at, updated_at, status, is_deleted, params', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, number, grower_id, dd, every, lowpop_dd, lowpop_every, creator_id, ordering, created_at, updated_at, status, is_deleted, params, rowsPerPage', 'safe', 'on'=>'search'),
		);
	}

	public function relations()
    {
		return array(
		);
	}

	public function pivotModels()
    {
		return array(
		);
	}

	public function attributeLabels()
    {
		return array(
			'id' => Yii::t('app', 'ID'),
			'number' => Yii::t('app', 'Number'),
			'grower_id' => Yii::t('app', 'Grower'),
			'dd' => Yii::t('app', 'Dd'),
			'every' => Yii::t('app', 'Every'),
			'lowpop_dd' => Yii::t('app', 'Lowpop Dd'),
			'lowpop_every' => Yii::t('app', 'Lowpop Every'),
			'creator_id' => Yii::t('app', 'Creator'),
			'ordering' => Yii::t('app', 'Ordering'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'status' => Yii::t('app', 'Status'),
			'is_deleted' => Yii::t('app', 'Is Deleted'),
			'params' => Yii::t('app', 'Params'),
		);
	}

	public function search()
    {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('number', $this->number);
		$criteria->compare('grower_id', $this->grower_id);
		$criteria->compare('dd', $this->dd);
		$criteria->compare('every', $this->every);
		$criteria->compare('lowpop_dd', $this->lowpop_dd);
		$criteria->compare('lowpop_every', $this->lowpop_every);
		$criteria->compare('creator_id', $this->creator_id, true);
		$criteria->compare('ordering', $this->ordering);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('is_deleted', $this->is_deleted);
		$criteria->compare('params', $this->params, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
				'pageSize' => $this->rowsPerPage,
			)
		));
	}
}