<?php

/**
 * This is the model base class for the table "{{user_user_role_maps}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserUserRoleMap".
 *
 * Columns in table "{{user_user_role_maps}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $user_id
 * @property string $user_role_id
 * @property integer $ordering
 *
 */
abstract class BaseUserUserRoleMap extends SimbActiveRecordItem{
    public static function model($className=__CLASS__)
    {
		return parent::model($className);
	}

	public function tableName()
    {
		return '{{user_user_role_maps}}';
	}

	public static function representingColumn()
    {
		return 'user_id';
	}

	public function rules()
    {
		return array(
			array('user_id, user_role_id', 'required'),
			array('ordering', 'numerical', 'integerOnly'=>true),
			array('user_id, user_role_id', 'length', 'max'=>20),
			array('ordering', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, user_role_id, ordering, rowsPerPage', 'safe', 'on'=>'search'),
		);
	}

	public function relations()
    {
		return array(
		);
	}

	public function pivotModels()
    {
		return array(
		);
	}

	public function attributeLabels()
    {
		return array(
			'user_id' => Yii::t('app', 'User'),
			'user_role_id' => Yii::t('app', 'User Role'),
			'ordering' => Yii::t('app', 'Ordering'),
		);
	}

	public function search()
    {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id, true);
		$criteria->compare('user_role_id', $this->user_role_id, true);
		$criteria->compare('ordering', $this->ordering);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
				'pageSize' => $this->rowsPerPage,
			)
		));
	}
}