<?php
/**
 * Yii configurations for FrontEnd
 */
ini_set('memory_limit', '256M');
//Load multiple classes
require_once( dirname(__FILE__) . '/../../components/SimbHelper.php');
 
return array(
	
    'name' => 'Growfruit',
	'timeZone' => 'Australia/Melbourne',
    'basePath' => dirname(__FILE__) . DS . '..' . DS . '..',
    'theme' => 'default',
    // path aliases
    'aliases' => array(
        // change this if necessary
        'bootstrap' => realpath(__DIR__ . DS . '..' . DS . '..' . DS . 'extensions' . DS . 'bootstrap'),
    ),
    // autoloading model and component classes
    'import' => array(
        'application.extensions.giix-components.*',
        'application.models.frontend.*',
        'application.models.service.*',
        'application.components.*',
		'application.helpers.*',
    	'ext.yii-mail.YiiMailMessage',
    	'ext.yii-ordering-column.*',
		
        // For bootstrap
        'bootstrap.helpers.*',
        'bootstrap.widgets.*',
        'bootstrap.behaviors.*',
    ),
    'preload' => array(
        'log',
    ),
    'behaviors' => array(
        // separate frontend and backend
        'runEnd' => array(
            'class' => 'application.components.SimbWebApplicationEndBehavior',
        ),
    ),
    'modules' => array(
        // uncomment the following to enable the Gii tool
        'gii' => array(
            'class' => 'system.gii.GiiModule',
            'generatorPaths' => array(
                'bootstrap.gii', // since 0.9.1
                'ext.giix-core', // giix generators
                'application.gii',

            ),
            'password' => '123456',
            // If removed, Gii defaults to localhost only. Edit carefully to taste.
            'ipFilters' => array('127.0.0.1', '::1'),
        ),
    	'webshell'=>array(
    		'class'=>'ext.webshell.WebShellModule',
    		// when typing 'exit', user will be redirected to this URL
    		'exitUrl' => '/',
    		// custom wterm options
    		'wtermOptions' => array(
    				// linux-like command prompt
    				'PS1' => '%',
    		),
    						// additional commands (see below)
    		'commands' => array(
    								'test' => array('js:function(){return "Hello, world!";}', 'Just a test.'),
    						),
    						// uncomment to disable yiic
    						// 'useYiic' => false,
    		
    						// adding custom yiic commands not from protected/commands dir
    						'yiicCommandMap' => array(
    								/*
    								'email'=>array(
    										'class'=>'ext.mailer.MailerCommand',
    										'from'=>'sam@rmcreative.ru',
    								),*/
    						),
    		),
    ),
    'components' => CMap::mergeArray(
            require(dirname(__FILE__) . DS . '..' . DS . 'db_connect.php'),
            array(
                // Asset management
                'assetManager' => array(
                    // Set the path for the assets generated by Yii
                    'basePath' => dirname(__FILE__) . DS . '..' . DS . '..' . DS . '..' . DS . 'assets',
                    // Set the base Url, should be changed on local machine
                    'baseUrl' => '/assets',
                ),
                // Logging system
                'log' => array(
                    'class' => 'CLogRouter',
                    'routes' => array(
                        array(
                            'class' => 'CFileLogRoute',
                            'levels' => 'error, warning, info, trace',
                            'maxFileSize' => 16384, // 16mb
                            'maxLogFiles' => 99,
                        ),
                        // debug toolbar configuration
                        array(
                            'class' => 'application.extensions.debugtoolbar.XWebDebugRouter',
                            'config' => 'alignLeft, opaque, runInDebug, fixedPos, collapsed, yamlStyle',
                            'levels' => 'error, warning, info, trace',
                            'allowedIPs' => array('127.0.0.1', $_SERVER['REMOTE_ADDR']),
                        ),
                        array(
                            'class' => 'ext.db_profiler.DbProfileLogRoute',
                            'countLimit' => 1,
                            // How many times the same query should be executed to be considered inefficient
                            'slowQueryMin' => 1.00,
                            // Minimum time for the query to be slow
                        ),
                    ),
                ),
            		'ePdf' => array(
            				'class' =>'ext.yii-pdf.EYiiPdf',
            				'params' => array(
            						'mpdf' => array(
            								'librarySourcePath' => 'application.vendors.mpdf.*',
            								'constants'         => array(
            										'_MPDF_TEMP_PATH' => Yii::getPathOfAlias('application.runtime'),
            								),
            								'class'=>'mpdf', // the literal class filename to be loaded from the vendors folder
            								/*'defaultParams'     => array( // More info: http://mpdf1.com/manual/index.php?tid=184
            								 'mode'              => '', //  This parameter specifies the mode of the new document.
            										'format'            => 'A4', // format A4, A5, ...
            										'default_font_size' => 0, // Sets the default document font size in points (pt)
            										'default_font'      => '', // Sets the default font-family for the new document.
            										'mgl'               => 15, // margin_left. Sets the page margins for the new document.
            										'mgr'               => 15, // margin_right
            										'mgt'               => 16, // margin_top
            										'mgb'               => 16, // margin_bottom
            										'mgh'               => 9, // margin_header
            										'mgf'               => 9, // margin_footer
            										'orientation'       => 'P', // landscape or portrait orientation
            								)*/
            						),
            						'HTML2PDF' => array(
            								'librarySourcePath' => 'application.vendors.html2pdf.*',
            								'classFile'         => 'html2pdf.class.php', // For adding to Yii::$classMap
            								'defaultParams'     => array( // More info: http://wiki.spipu.net/doku.php?id=html2pdf:en:v4:accueil
            										'orientation' => 'P', // landscape or portrait orientation
            										'format'      => 'A5', // format A4, A5, ...
            										'language'    => 'en', // language: fr, en, it ...
            										'unicode'     => true, // TRUE means clustering the input text IS unicode (default = true)
            										'encoding'    => 'UTF-8', // charset encoding; Default is UTF-8
            										'marges'      => array(10,10,10,10), // margins by default, in order (left, top, right, bottom)
            								)
            						)
            				),
            		),
                // ClientScript
                'clientScript' => array(
                    'class' => 'ext.npMinScript.NpMinScript',
                    'combineScriptFiles' => false,
                    // By default this is set to true, change it to false to disable combining JS files
                    'combineCssFiles' => false,
                    // By default this is set to true, change it to false to disable combining CSS files
                    'optimizeScriptFiles' => false,
                    // @since: 1.1
                    'optimizeCssFiles' => false,
                    // @since: 1.1
                    'maxFileSize' => 200000,
                    'cacheObjectName' => 'fileCache',
                    'cacheTimeout' => 10800,
                    'jsPosEnd' => true,
                ),
                'fileCache' => array(
                    'class' => 'CFileCache'
                ),
                // Init bootstrap
                'bootstrap' => array(
                    'class' => 'bootstrap.components.TbApi',

                ),
                // Use session of the browser
                'session' => array(
                    'class' => 'CHttpSession',
                ),
                // Handling user session
                'user' => array(
                    'class' => 'application.components.SimbWebUser',
                    'loginUrl' => array('site/login'),
                    // Handling cleaning flashes automatically
                    'autoUpdateFlash' => false,
                    // enable cookie-based authentication
                    'allowAutoLogin'=>true,
	   
                ),
				
				'mail' => array(
					'class' => 'ext.yii-mail.YiiMail',
		            'transportType' => 'php',
		            /*
					'transportType' => 'smtp',
		            'transportOptions'=>array(
		                'host'=>'mail.host',
		                'username'=>'',
		                'password'=>'',
		                'port'=>'26',
		            ),*/
					'viewPath' => 'application.views.mail',
					'logging' => true,
					'dryRun' => false,
				),
				
                // Url Manager
                'urlManager' => array(
                    'class' => 'SimbUrlManagerFrontend',
                    'urlFormat' => 'path',
                    'rules' => require(dirname(__FILE__) . DS . 'routes.php'),
                    'showScriptName' => false,
                    'appendParams' => false,
                ),
                'image'=>array(
                    'class'=>'application.extensions.image.Image'
                )
            )
        ),
    // array of params for the whole app
    'params' => CMap::mergeArray(
            require(dirname(__FILE__) . DS . '..' . DS . 'params.php'),
            // Extra params
            array()
        ),
);